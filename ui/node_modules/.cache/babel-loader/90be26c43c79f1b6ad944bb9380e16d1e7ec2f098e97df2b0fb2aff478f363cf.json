{"ast":null,"code":"var _jsxFileName = \"/Users/tgaw/Desktop/personal-projects/chekit/ui/src/components/SpotPopup.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotPopup = props => {\n  _s();\n  const {\n    spot\n  } = props;\n  const [checked, setChecked] = useState(spot.visited);\n  const [name, setName] = useState(spot.name);\n  const [recommendations, setRecommendations] = useState(spot.recommendations);\n  const [isEditing, setEditing] = useState(false);\n  const handleEdit = () => {\n    setEditing(!isEditing);\n  };\n  const handleNameChange = event => {\n    setRecommendations(event.currentTarget.value);\n  };\n  const handleRecommendationChange = event => {\n    spot.recommendations = event.currentTarget.value;\n  };\n  const handleToggle = () => {\n    setChecked(!checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: name,\n        onChange: handleNameChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Recommendations: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"recommendations\",\n        name: \"recommendations\",\n        value: recommendations,\n        onChange: handleRecommendationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Visted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${spot.lat}, ${spot.lon}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: spot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: spot.recommendations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Visted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${spot.lat}, ${spot.lon}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEdit,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(SpotPopup, \"2vOMne147WAk5wr4uR7fGvrxBbM=\");\n_c = SpotPopup;\nexport default SpotPopup;\nvar _c;\n$RefreshReg$(_c, \"SpotPopup\");","map":{"version":3,"names":["useState","SpotPopup","props","spot","checked","setChecked","visited","name","setName","recommendations","setRecommendations","isEditing","setEditing","handleEdit","handleNameChange","event","currentTarget","value","handleRecommendationChange","handleToggle","lat","lon"],"sources":["/Users/tgaw/Desktop/personal-projects/chekit/ui/src/components/SpotPopup.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { Spot } from \"../resources/MapResources\";\n\n\ntype SpotPopupProps = {\n    spot: Spot;\n}\n\nconst SpotPopup: React.FC<SpotPopupProps> = (props) => {\n    const { spot }  = props\n    const [checked, setChecked] = useState<boolean>(spot.visited);\n    const [name, setName] = useState<string>(spot.name);\n    const [recommendations, setRecommendations] = useState<string>(spot.recommendations);\n    const [isEditing, setEditing] = useState(false);\n\n    const handleEdit = () => {\n        setEditing(!isEditing)\n    }\n\n    const handleNameChange = (event: React.FormEvent<HTMLInputElement>) => {\n        setRecommendations(event.currentTarget.value);\n    }\n\n    const handleRecommendationChange = (event: React.FormEvent<HTMLInputElement>) => {\n        spot.recommendations = event.currentTarget.value;\n    }\n\n    const handleToggle = () => {\n        setChecked(!checked);\n    }\n\n    return(\n        <div>\n            { isEditing? \n                <div className=\"editForm\">\n                    <label >Name: </label>\n                    <input \n                        type=\"text\" \n                        id=\"name\" \n                        name=\"name\" \n                        value={name}\n                        onChange={handleNameChange}\n                        required\n                    />\n                    <br />\n                    <label >Recommendations: </label>\n                    <input \n                        type=\"text\" \n                        id=\"recommendations\" \n                        name=\"recommendations\" \n                        value={recommendations}\n                        onChange={handleRecommendationChange}\n                    />\n                    <br />\n                    <input \n                        type=\"checkbox\" \n                        checked={checked}\n                        onChange={handleToggle}\n                    />\n                    <label >Visted</label>\n                    <p>{`${spot.lat}, ${spot.lon}`}</p>\n                </div> : \n                <div>\n                    <h3>{spot.name}</h3>\n                    <p><em>{spot.recommendations}</em></p>\n                    <input type=\"checkbox\" \n                        checked={checked}\n                        onChange={handleToggle}\n                    />\n                    <label >Visted</label>\n                    <p>{`${spot.lat}, ${spot.lon}`}</p>\n                </div> \n            }\n            <button onClick={handleEdit}>Edit</button>\n        </div>\n    )\n};\n\nexport default SpotPopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}